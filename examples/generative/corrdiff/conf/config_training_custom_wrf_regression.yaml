# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hydra:
    job:
          chdir: false
          name: custom_wrf_regression
    run:
          dir: ./output/${hydra:job.name}
    searchpath:
          - pkg://conf/base # Do not modify

# Base parameters for dataset, model, training, and validation
defaults:

    - dataset: custom_wrf 
    # The dataset type for training.
    # Accepted values:
    #   `gefs_hrrr`: full GEFS-HRRR dataset for continental US.
    #   `hrrr_mini`: smaller HRRR dataset (continental US), for fast experiments.
    #   `cwb`: full CWB dataset for Taiwan.
    #   `custom`: user-defined dataset. Parameters need to be specified below.

    - model: regression
    # The model type.
    # Accepted values:
    #     `regression`: a regression UNet for deterministic predictions
    #     `lt_aware_ce_regression`: similar to `regression` but with lead time
    #       conditioning
    #     `diffusion`: a diffusion UNet for residual predictions
    #     `patched_diffusion`: a more memory-efficient diffusion model
    #     `lt_aware_patched_diffusion`: similar to `patched_diffusion` but
    #       with lead time conditioning

    - model_size: normal
    # The model size configuration.
    # Accepted values:
    #     `normal`: normal model size
    #     `mini`: smaller model size for fast experiments

    - training: ${model}
    # The base training parameters. Determined by the model type.


# Dataset parameters. Used for `custom` dataset type.
# Modify or add below parameters that should be passed as argument to the
# user-defined dataset class.
dataset:
    data_path: ./data/train_data/wrf_25km_5km_train.nc
    # Path to .nc data file
    stats_path: ./data/train_data/wrf_25km_5km_train_stats.json
    # Path to json stats file
    input_variables: ['U1000', 'U100m', 'U10m', 'U850', 'V1000', 'V100m', 'V10m', 'V850']
    # Names or indices of input channels
    output_variables: ['U1000', 'U100m', 'U10m', 'U850', 'V1000', 'V100m', 'V10m', 'V850']
    # Names or indices of output channels
    invariant_variables: ['elev_mean', 'lsm_mean']
    # Names or indices of invariant channels. Optional.


# Training parameters
training:
    hp:
        training_duration: 20000
        # Training duration based on the number of processed samples, default: 2000000
    io:
        print_progress_freq: 10000

# Parameters for wandb logging
wandb:
    mode: offline
    # Configure whether to use wandb: "offline", "online", "disabled"
    results_dir: "./wandb"
    # Directory to store wandb results
    watch_model: false
    # If true, wandb will track model parameters and gradients
